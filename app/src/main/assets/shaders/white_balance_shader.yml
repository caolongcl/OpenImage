name: white_balance

vertex:
  _#1_version 300 es

  layout(location = 0) in vec4 aPosition;
  layout(location = 1) in vec2 aTexCoords;
  out vec2 vTexCoords;

  void main() {
  vTexCoords = aTexCoords;
  gl_Position = aPosition;
  }

#compute:


fragment:
  _#1_version 300 es

  precision mediump float;

  uniform sampler2D uTexSampler;
  uniform lowp float uTemperature;
  uniform lowp float uTint;

  in highp vec2 vTexCoords;
  out vec4 oFragColor;

  const lowp vec3 warmFilter = vec3(0.93, 0.54, 0.0);
  const mediump mat3 RGBtoYIQ = mat3(0.299, 0.587, 0.114, 0.596, -0.274, -0.322, 0.212, -0.523, 0.311);
  const mediump mat3 YIQtoRGB = mat3(1.0, 0.956, 0.621, 1.0, -0.272, -0.647, 1.0, -1.105, 1.702);
  void main() {
  lowp vec4 source = texture(uTexSampler, vTexCoords);

  //adjusting tint

  mediump vec3 yiq = RGBtoYIQ * source.rgb;
  yiq.b = clamp(yiq.b + uTint*0.5226*0.1, -0.5226, 0.5226);
  lowp vec3 rgb = YIQtoRGB * yiq;
  lowp vec3 processed = vec3(
  (rgb.r < 0.5 ? (2.0 * rgb.r * warmFilter.r)_#2_(1.0 - 2.0 * (1.0 - rgb.r) * (1.0 - warmFilter.r))),
  (rgb.g < 0.5 ? (2.0 * rgb.g * warmFilter.g)_#2_(1.0 - 2.0 * (1.0 - rgb.g) * (1.0 - warmFilter.g))),
  (rgb.b < 0.5 ? (2.0 * rgb.b * warmFilter.b)_#2_(1.0 - 2.0 * (1.0 - rgb.b) * (1.0 - warmFilter.b))));
  oFragColor = vec4(mix(rgb, processed, uTemperature), source.a);
  }